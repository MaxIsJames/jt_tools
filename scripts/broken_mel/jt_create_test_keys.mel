
/***************************************************************************************************

# JT_createTestKeys.mel

# www.jonathantopf.com 2012

# automates setting up test rotation keys on a bone, useful for testing skinning etc
    
# Copyright (c) 2012 Jonathan Topf

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


***************************************************************************************************/

// procedure for showing ui

global proc JT_createTestKeys(){

    if (getApplicationVersionAsFloat() >= 2011){
    
        string $scriptsDirectory = `internalVar -usd`;  
        string $JT_createCorrectiveBlendShapes_window = `loadUI -uiFile ($scriptsDirectory+"JT_createTestKeys_Window.ui")`;
        showWindow $JT_createCorrectiveBlendShapes_window;
    
    } else {
    
    error "you are using a verion of maya that is too old";
    
    }

}


global proc JT_createTestKeys_create() {

    string $selecion []= `ls -sl`;

    string $joint = $selecion[0];

    select $joint;

    int $original_time = `currentTime -q`;


    int $x_create = `checkBox -q -value JT_createTestKeys_X_Check`; 
    float $x_low = `textField -q -text JT_createTestKeys_XLow`;
    float $x_high = `textField -q -text JT_createTestKeys_XHigh`;

    int $y_create = `checkBox -q -value JT_createTestKeys_Y_Check`; 
    float $y_low = `textField -q -text JT_createTestKeys_YLow`;
    float $y_high = `textField -q -text JT_createTestKeys_YHigh`;

    int $z_create = `checkBox -q -value JT_createTestKeys_Z_Check`; 
    float $z_low = `textField -q -text JT_createTestKeys_ZLow`;
    float $z_high = `textField -q -text JT_createTestKeys_ZHigh`;

    currentTime -e 1;
    int $current_time = 0;

    if ($x_create){
        rotate -x 0;
        setKeyframe -at rotateX;
        currentTime -e ($current_time += 1);
        rotate -x $x_low;
        setKeyframe -at rotateX;
        
        currentTime -e ($current_time += 49);
        rotate -x $x_high;
        setKeyframe -at rotateX;
        currentTime -e ($current_time += 1);
        rotate -x 0;
        setKeyframe -at rotateX;
    }

    if ($y_create){
        rotate -y 0;
        print $current_time;
        setKeyframe -at rotateY;
        currentTime -e ($current_time += 1);
        rotate -y $y_low;
        setKeyframe -at rotateY;
        
        currentTime -e ($current_time += 49);
        rotate -y $y_high;
        setKeyframe -at rotateY;
        currentTime -e ($current_time += 1);
        rotate -y 0;
        setKeyframe -at rotateY;
    }

    if ($z_create){
        rotate -z 0;
        print $current_time;
        setKeyframe -at rotateZ;
        currentTime -e ($current_time += 1);
        rotate -z $z_low;
        setKeyframe -at rotateZ;
        
        currentTime -e ($current_time += 49);
        rotate -z $z_high;
        setKeyframe -at rotateZ;
        currentTime -e ($current_time += 1);
        rotate -z 0;
        setKeyframe -at rotateZ;
    }

    currentTime -e $original_time;

}