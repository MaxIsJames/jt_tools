/***************************************************************************************************

	JT_createControl.mel

    www.jonathantopf.com 2011

    creates slider, rotation and XY control
    

***************************************************************************************************/

// define function to removes spaces from a string and replace them with "_"

proc string removeSpaces(string $str){

	string $str_token[];

	tokenize $str " " $str_token; // splits original string into many smaller strngs at each white space

	if (size($str_token) > 1) {

    	int $i = 0;
    	$str = "";
    	while (size($str_token) > $i){
        	$str += $str_token[$i];
        	
        	if (size($str_token) > ($i+1)) { // stops an extra "_" being added at the end of the string
            	$str += "_";
        	}
        	
        	$i++;
    	}

	}

return $str;

}

// show UI -----------------------------------------------------------------------------------------

global proc JT_createControl() {
	if (getApplicationVersionAsFloat() >= 2011){
	
		string $scriptsDirectory = `internalVar -usd`;	
		string $JT_createControl_window = `loadUI -uiFile ($scriptsDirectory+"JT_createControl_Window.ui")`;
		showWindow $JT_createControl_window;
	
	} else {
	
	error "you are using a verion of maya that is too old";
	
	}

}

// create slider -----------------------------------------------------------------------------------
global proc JT_createSlider (){

	// get all the details from the ui
	string $control_name = `textField -q -text JT_createControl_createSlider_name`;
	$control_name = removeSpaces($control_name);
	
	float $slider_start = `textField -q -text JT_createControl_createSlider_sliderStart`;
	float $slider_end = `textField -q -text JT_createControl_createSlider_sliderEnd`;
	int $slider_normalize = `checkBox -q -value JT_createControl_createSlider_normalize`;	
	string $start_limit = `textField -q -text JT_createControl_createSlider_startLimit`;
	string $end_limit = `textField -q -text JT_createControl_createSlider_endLimit`;
	int $slider_orientation = `radioButton -q -select JT_createControl_createSlider_vertical_radio`; // 1 = vertical, 0 = horizontal
	
	int $override_ID = `textField -q -text JT_createControl_createSlider_color_ID`;
	int $handle_override_ID = `textField -q -text JT_createControl_createSlider_handleID`;
	
	float $normalize_scale = $slider_end - $slider_start;
	
	float $master_scale = `textField -q -text JT_createControl_createSlider_scale`;
	
	// check if a control with the same name exists ------------------------------------------------
	if (`objExists $control_name`) {
		error "an object with this name already exists";
	} else {
		
		//draw guide rail --
		curve -d 1 -p 0 $slider_start 0 -p 0 $slider_end 0 -k 0 -k 1 ;
		xform -cp;
		rename ($control_name + "_rail");
		setAttr ".overrideEnabled" 1;
		setAttr ".overrideColor" $override_ID; //set override color
		
		// create zero marker --
		curve -d 1 -p -0.1 0 0 -p 0.1 0 0 -k 0 -k 1;
		
		if ($slider_normalize){
			scale $normalize_scale $normalize_scale $normalize_scale;
		}
		
		rename ($control_name + "_zero_mark");
		setAttr ".overrideEnabled" 1;
		setAttr ".overrideColor" $override_ID; //set override color
		
		// create handle --
		curve -d 1 -p -0.166667 0.0555556 0 -p 0.166667 -0.0555556 0 -p 0.166667 0.0555556 0 -p -0.166667 -0.0555556 0 -p -0.166667 0.0555556 0 -p 0.166667 0.0555556 0 -p 0.166667 -0.0555556 0 -p -0.166667 -0.0555556 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;
		
		if ($slider_normalize){
			scale $normalize_scale $normalize_scale $normalize_scale;
		}
		
		rename ($control_name);
		setAttr ".overrideEnabled" 1;
		setAttr ".overrideColor" $handle_override_ID; //set override color
		
		// set handle limits --
		
		if (($start_limit != "none") || ($end_limit != "none")) {
			int $set_start = 0; 
			int $set_end = 0;
			float $start = $start_limit; 
			float $end = $end_limit; 
			
			if ($start_limit != "none") { // turn on set start flag if value isn't "none"
				$set_start = 1;
			}
			if ($end_limit != "none") { // turn on set end flag if value isn't "none"
				$set_end = 1;
			}
			
			// set limits   	
			transformLimits -ty $start $end -ety $set_start $set_end $control_name; 	
		}  
		
		// parent everything to the rail ---------------------------------------------------------------
		parent ($control_name + "_zero_mark") $control_name ($control_name + "_rail"); 
		
		// move and scale eveythign so its 1 unit in length --------------------------------------------
		select -r ($control_name + "_rail");
		move -y (-1 * $slider_start); // move object so it starts at 0
		move -absolute 0 0  0 ($control_name + "_rail.scalePivot") ($control_name + "_rail.rotatePivot"); // move txÂ§he pivot to 0 0 0
		
		if ($slider_normalize){
			scale (1 / $normalize_scale) (1 / $normalize_scale) (1 / $normalize_scale);
		}
		
		if ($slider_orientation == 0){ //rotate the control if radio button is checked.
		  rotate 0 0 -90;
		}
		
		if ($master_scale > 0) {
			scale $master_scale $master_scale $master_scale;
		}
		
		// set everything but the control object to non keyable ----------------------------------------
		
		// rail --
		setAttr -keyable false ($control_name + "_rail.tx");
		setAttr -keyable false ($control_name + "_rail.ty");
		setAttr -keyable false ($control_name + "_rail.tz");
		setAttr -keyable false ($control_name + "_rail.rx");
		setAttr -keyable false ($control_name + "_rail.ry");
		setAttr -keyable false ($control_name + "_rail.rz");
		setAttr -keyable false ($control_name + "_rail.sx");
		setAttr -keyable false ($control_name + "_rail.sy");
		setAttr -keyable false ($control_name + "_rail.sz");
		setAttr -keyable false ($control_name + "_rail.v");
		
		// zero marker --
		setAttr -lock true ($control_name + "_zero_mark.tx");
		setAttr -lock true ($control_name + "_zero_mark.ty");
		setAttr -lock true ($control_name + "_zero_mark.tz");
		setAttr -lock true ($control_name + "_zero_mark.rx");
		setAttr -lock true ($control_name + "_zero_mark.ry");
		setAttr -lock true ($control_name + "_zero_mark.rz");
		setAttr -lock true ($control_name + "_zero_mark.sx");
		setAttr -lock true ($control_name + "_zero_mark.sy");
		setAttr -lock true ($control_name + "_zero_mark.sz");
		setAttr -lock true ($control_name + "_zero_mark.v");
		
		// handle --
		setAttr -lock true -keyable false -channelBox false ($control_name + ".rx");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".ry");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".rz");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".sx");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".sy");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".sz");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".v");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".tz");
		setAttr -lock true -keyable false -channelBox false ($control_name + ".tx");
		
		select -r ($control_name + "_rail");
	}

}

// create rot ctl ----------------------------------------------------------------------------------
global proc JT_createRotCtl (){

	// get variables from ui --
	string $control_name = `textField -q -text JT_createControl_createRot_name`;
	$control_name = removeSpaces($control_name);
	
	int $override_ID = `textField -q -text JT_createControl_createRot_color_ID`;
	int $handle_override_ID = `textField -q -text JT_createControl_createRot_handleID`;
	
	float $master_scale = `textField -q -text JT_createControl_createRot_scale`;
	
	// check if a control with the same name exists --
	if (`objExists $control_name`) {
		error "an object with this name already exists";
	} else {
	
	// create guide --------------------------------------------------------------------------------
	circle -ch on -o on -r 0.5 ;
	DeleteHistory; 
	rename ($control_name + "_guide");
	setAttr ".overrideEnabled" 1;
	setAttr ".overrideColor" $override_ID; //set override color
	
	
	// create handle -------------------------------------------------------------------------------
	curve -d 1 -p 0 0.5 0 -p -0.0555556 0 0 -p 0.0555556 0 0 -p 0 -0.0555556 0 -p -0.0555556 0 0 -p 0 0 0 -p 0 -0.0555556 0 -p 0 0.5 0 -p 0.0555556 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 ;
	rename $control_name;
	setAttr ".overrideEnabled" 1;
	setAttr ".overrideColor" $handle_override_ID; //set override color
	
	parent $control_name ($control_name + "_guide");
	
	//set master scale
	if ($master_scale > 0) {
		scale $master_scale $master_scale $master_scale;
	}
	
	// set everything but the control object to non keyable etc ------------------------------------
	
	// guide circle --
	setAttr -keyable false -channelBox true ($control_name + "_guide.tx");
	setAttr -keyable false -channelBox true ($control_name + "_guide.ty");
	setAttr -keyable false -channelBox true ($control_name + "_guide.tz");
	setAttr -keyable false -channelBox true ($control_name + "_guide.rx");
	setAttr -keyable false -channelBox true ($control_name + "_guide.ry");
	setAttr -keyable false -channelBox true ($control_name + "_guide.rz");
	setAttr -keyable false -channelBox true ($control_name + "_guide.sx");
	setAttr -keyable false -channelBox true ($control_name + "_guide.sy");
	setAttr -keyable false -channelBox true ($control_name + "_guide.sz");
	setAttr -keyable false -channelBox true ($control_name + "_guide.v");
	
	// handle --
	setAttr -lock true -keyable false -channelBox false ($control_name + ".sx");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".sy");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".sz");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".v");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".tx");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".ty");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".tz");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".rx");
	setAttr -lock true -keyable false -channelBox false ($control_name + ".ry");
	
	select -r ($control_name + "_guide");
	
	}

}

// create XY ctl -----------------------------------------------------------------------------------
global proc JT_createXYCtl (){

	// get variables from ui --
	string $control_name = `textField -q -text JT_createControl_createXY_name`;
	$control_name = removeSpaces($control_name);
	
	float $width = `textField -q -text JT_createControl_createXY_width`;
	float $height = `textField -q -text JT_createControl_createXY_height`;
	
	int $normalize = `checkBox -q -value JT_createControl_createXY_normalize`;	
	int $limit = `checkBox -q -value JT_createControl_createXY_limit`;		
	int $override_ID = `textField -q -text JT_createControl_createXY_colorID`;
	int $handle_override_ID = `textField -q -text JT_createControl_createXY_handleID`;
	
	float $master_scale = `textField -q -text JT_createControl_createXY_scale`;
	
	
	// check if a control with the same name exists --
	if (`objExists $control_name`) {
		error "an object with this name already exists";
	} else {
	
		if (($width <= 0) || ($height <= 0)){
			error "invalid dimensions, width & height must be greater than zero";
		} else {
			
			// create guide curve ------------------------------------------------------------------
			
			float $left = ($width/2) * -1;
			float $right = $width /2;
			float $top = $height / 2;
			float $bottom = ($height / 2) * -1;
			
			curve -d 1 -p $left $bottom 0 -p $left $top 0 -p $right $top 0 -p $right $bottom 0 -p $left $bottom 0;
			rename ($control_name + "_guide");
			setAttr ".overrideEnabled" 1;
			setAttr ".overrideColor" $override_ID; //set override color
			
			// create centre guide -----------------------------------------------------------------
			curve -d 1 -p -0.0555556 0 0 -p 0.0555556 0 0 -p 0 0 0 -p 0 0.0555556 0 -p 0 -0.0555556 0 -k 0 -k 1 -k 2 -k 3 -k 4 ;
			rename ($control_name + "_centre");
			setAttr ".overrideEnabled" 1;
			setAttr ".overrideColor" $override_ID; //set override color
			// prescale
			if ($normalize){
				scale $width $height 0;
			}
	
			// create handle -----------------------------------------------------------------------
			curve -d 1 -p -0.111111 0.111111 0 -p 0.111111 0.111111 0 -p -0.111111 -0.111111 0 -p 0.111111 -0.111111 0 -p 0.111111 0.111111 0 -p -0.111111 0.111111 0 -p 0.111111 -0.111111 0 -p -0.111111 -0.111111 0 -p -0.111111 0.111111 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 ;
			rename ($control_name);
			setAttr ".overrideEnabled" 1;
			setAttr ".overrideColor" $handle_override_ID; //set override color
			
			//set limits
			if ($limit){
				transformLimits -ty (-1 * ($height / 2)) ($height / 2) -ety 1 1 $control_name;
				transformLimits -tx (-1 * ($width / 2)) ($width / 2) -etx 1 1 $control_name;
			}
			
			// prescale handle 
			if ($normalize){
				scale $width $height 0;
			}
			
			// paent everythign togetehr --
			parent $control_name ($control_name + "_centre") ($control_name + "_guide");
			
			// normalize everything
			if ($normalize) {
				scale (1 / $width) (1 / $height) 0 ($control_name + "_guide");
			}
			
			if ($master_scale > 0){
				scale -r $master_scale $master_scale $master_scale ($control_name + "_guide");
			}
			
			// set everythign but the handle to nonkeyable etc
			// guide box --
			setAttr -keyable false -channelBox true ($control_name + "_guide.tx");
			setAttr -keyable false -channelBox true ($control_name + "_guide.ty");
			setAttr -keyable false -channelBox true ($control_name + "_guide.tz");
			setAttr -keyable false -channelBox true ($control_name + "_guide.rx");
			setAttr -keyable false -channelBox true ($control_name + "_guide.ry");
			setAttr -keyable false -channelBox true ($control_name + "_guide.rz");
			setAttr -keyable false -channelBox true ($control_name + "_guide.sx");
			setAttr -keyable false -channelBox true ($control_name + "_guide.sy");
			setAttr -keyable false -channelBox true ($control_name + "_guide.sz");
			setAttr -keyable false -channelBox true ($control_name + "_guide.v");
			
			// centre point --
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.tx");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.ty");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.tz");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.rx");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.ry");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.rz");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.sx");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.sy");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.sz");
			setAttr -lock true -keyable false -channelBox false ($control_name + "_centre.v");
			
			//handle --
			setAttr -lock true -keyable false -channelBox false ($control_name + ".tz");
			setAttr -lock true -keyable false -channelBox false ($control_name + ".rx");
			setAttr -lock true -keyable false -channelBox false ($control_name + ".ry");
			setAttr -lock true -keyable false -channelBox false ($control_name + ".rz");
			setAttr -lock true -keyable false -channelBox false ($control_name + ".sx");
			setAttr -lock true -keyable false -channelBox false ($control_name + ".sy");
			setAttr -lock true -keyable false -channelBox false ($control_name + ".sz");
			setAttr -lock true -keyable false -channelBox false ($control_name + ".v");
			
			select -r ($control_name + "_guide");

		}
	
	}
	
}
